// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyItems.Backend;

#nullable disable

namespace MyItems.Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230720224021_CascadeDelte3")]
    partial class CascadeDelte3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Collections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a44ea579-0df7-4687-9823-741183a917d3"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/640/480/?image=158",
                            Name = "Unbranded Frozen Car",
                            Theme = "Practical",
                            UserId = new Guid("92ac60de-e8ec-4bb5-ba54-582661737f87")
                        },
                        new
                        {
                            Id = new Guid("4231d379-fd0a-44e5-9c5b-7d926bd8fdbe"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/640/480/?image=216",
                            Name = "Rustic Granite Car",
                            Theme = "Tasty",
                            UserId = new Guid("533dabbb-b813-4781-b26b-a11896db5e68")
                        },
                        new
                        {
                            Id = new Guid("5d68491e-7009-43eb-908a-44cf68028eaa"),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/640/480/?image=986",
                            Name = "Awesome Fresh Car",
                            Theme = "Awesome",
                            UserId = new Guid("4b2559e3-db98-446c-a781-27733e204c9a")
                        },
                        new
                        {
                            Id = new Guid("76e2f6cf-a9b1-459a-8084-f5ec21553990"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/640/480/?image=53",
                            Name = "Refined Concrete Chicken",
                            Theme = "Practical",
                            UserId = new Guid("533dabbb-b813-4781-b26b-a11896db5e68")
                        },
                        new
                        {
                            Id = new Guid("228c90ca-50ea-4357-9d5a-da6b70a1ffdb"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/640/480/?image=120",
                            Name = "Gorgeous Fresh Keyboard",
                            Theme = "Tasty",
                            UserId = new Guid("92ac60de-e8ec-4bb5-ba54-582661737f87")
                        },
                        new
                        {
                            Id = new Guid("82ac6111-97a5-4ef5-b585-2ff4af3d4921"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/640/480/?image=292",
                            Name = "Sleek Frozen Table",
                            Theme = "Intelligent",
                            UserId = new Guid("92ac60de-e8ec-4bb5-ba54-582661737f87")
                        },
                        new
                        {
                            Id = new Guid("9d257017-02a9-4a95-b0c1-029fea8c6057"),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/640/480/?image=214",
                            Name = "Handcrafted Rubber Bacon",
                            Theme = "Practical",
                            UserId = new Guid("353b8c94-eb78-4d2c-9cad-748dfecd7e16")
                        },
                        new
                        {
                            Id = new Guid("efef1b27-3d45-49fd-86e6-ae8bd477dd8e"),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/640/480/?image=430",
                            Name = "Unbranded Metal Hat",
                            Theme = "Gorgeous",
                            UserId = new Guid("5b27c762-bb51-4710-a302-6c25ce8d9219")
                        },
                        new
                        {
                            Id = new Guid("d5789970-148f-46c0-8718-9fdd8d0caad2"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/640/480/?image=1083",
                            Name = "Practical Rubber Keyboard",
                            Theme = "Small",
                            UserId = new Guid("a6298fe0-83b0-4638-b38a-1cb3566fd83d")
                        },
                        new
                        {
                            Id = new Guid("b8e227bb-1551-4ecc-b8d0-7b7b912c79db"),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/640/480/?image=498",
                            Name = "Intelligent Granite Bike",
                            Theme = "Intelligent",
                            UserId = new Guid("92ac60de-e8ec-4bb5-ba54-582661737f87")
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("CustomProperties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbca66b5-3b77-4119-9e21-647e8914260e"),
                            CollectionId = new Guid("a44ea579-0df7-4687-9823-741183a917d3"),
                            Name = "Schaefer - Kuhic",
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("603d007e-c90c-40fe-b730-5d1dcc5db3da"),
                            CollectionId = new Guid("4231d379-fd0a-44e5-9c5b-7d926bd8fdbe"),
                            Name = "Runte, Boehm and Prosacco",
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("4c19cf2e-ecb6-4c7d-b70f-c57191fbbf56"),
                            CollectionId = new Guid("5d68491e-7009-43eb-908a-44cf68028eaa"),
                            Name = "Greenfelder LLC",
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("ffc324f9-407e-4d7f-ad4e-75193eed80e5"),
                            CollectionId = new Guid("76e2f6cf-a9b1-459a-8084-f5ec21553990"),
                            Name = "Kohler, Ledner and Haley",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("5da9ac92-e7c5-4231-8b10-edf9f152fc65"),
                            CollectionId = new Guid("228c90ca-50ea-4357-9d5a-da6b70a1ffdb"),
                            Name = "Abshire - D'Amore",
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("6285c931-0cda-46dd-815c-d984fca0cad5"),
                            CollectionId = new Guid("82ac6111-97a5-4ef5-b585-2ff4af3d4921"),
                            Name = "Schoen, Beer and Huel",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("018979d4-14ea-4586-9a68-9b6564143b5c"),
                            CollectionId = new Guid("9d257017-02a9-4a95-b0c1-029fea8c6057"),
                            Name = "Littel LLC",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("14f81106-6bb2-434f-9d40-9e40271c390f"),
                            CollectionId = new Guid("efef1b27-3d45-49fd-86e6-ae8bd477dd8e"),
                            Name = "Keeling - Schmidt",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("48b470db-3a05-45a5-bdb4-2244bae40118"),
                            CollectionId = new Guid("d5789970-148f-46c0-8718-9fdd8d0caad2"),
                            Name = "Streich, Pfeffer and Mitchell",
                            TypeProperty = "string"
                        },
                        new
                        {
                            Id = new Guid("e35ebda8-1e86-46b3-997f-b074fa69cc32"),
                            CollectionId = new Guid("b8e227bb-1551-4ecc-b8d0-7b7b912c79db"),
                            Name = "Armstrong - Pacocha",
                            TypeProperty = "number"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomPropertyId");

                    b.HasIndex("ItemId");

                    b.ToTable("CustomPropertyValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6d1691e-f9cf-452e-b514-c0b6c0ce0f37"),
                            CustomPropertyId = new Guid("cbca66b5-3b77-4119-9e21-647e8914260e"),
                            ItemId = new Guid("5b89745e-4de9-45b7-9fc4-f53e99efc26a"),
                            Value = "Tasty Cotton Bike"
                        },
                        new
                        {
                            Id = new Guid("0aab9cbe-5cfd-43d2-bc55-1096db61cf62"),
                            CustomPropertyId = new Guid("603d007e-c90c-40fe-b730-5d1dcc5db3da"),
                            ItemId = new Guid("8b7fdde1-df2f-48af-8a0d-87673ab34d99"),
                            Value = "Rustic Rubber Car"
                        },
                        new
                        {
                            Id = new Guid("536b633c-3ab8-4f4a-be60-639730229af2"),
                            CustomPropertyId = new Guid("4c19cf2e-ecb6-4c7d-b70f-c57191fbbf56"),
                            ItemId = new Guid("9a9280c5-9506-472d-9088-494f671ed08e"),
                            Value = "Fantastic Fresh Chair"
                        },
                        new
                        {
                            Id = new Guid("838987d1-44cc-4b42-8331-1ebc8ea04b1b"),
                            CustomPropertyId = new Guid("ffc324f9-407e-4d7f-ad4e-75193eed80e5"),
                            ItemId = new Guid("77b2f469-d432-4f8b-bff3-d6a2aa07faca"),
                            Value = "Rustic Rubber Bike"
                        },
                        new
                        {
                            Id = new Guid("25bba17b-0ef7-403f-8dbe-661066202e35"),
                            CustomPropertyId = new Guid("5da9ac92-e7c5-4231-8b10-edf9f152fc65"),
                            ItemId = new Guid("87b428f7-d1d1-44d3-9d83-88c53ea983d5"),
                            Value = "Handcrafted Plastic Car"
                        },
                        new
                        {
                            Id = new Guid("a92250c0-5b7a-4498-9137-08642feee952"),
                            CustomPropertyId = new Guid("6285c931-0cda-46dd-815c-d984fca0cad5"),
                            ItemId = new Guid("cc463718-a8e3-47ac-8ad2-8b5a8d46c8be"),
                            Value = "Practical Metal Table"
                        },
                        new
                        {
                            Id = new Guid("2e03d1f5-3c52-44ce-8a9a-640844277139"),
                            CustomPropertyId = new Guid("018979d4-14ea-4586-9a68-9b6564143b5c"),
                            ItemId = new Guid("b1bfe819-1de9-4475-bdf7-39755fcd94b8"),
                            Value = "Generic Wooden Tuna"
                        },
                        new
                        {
                            Id = new Guid("e53c2fe2-ae14-4b98-9266-e006276dace6"),
                            CustomPropertyId = new Guid("14f81106-6bb2-434f-9d40-9e40271c390f"),
                            ItemId = new Guid("b7e55469-a480-49cd-8f16-892a9cff156f"),
                            Value = "Small Wooden Fish"
                        },
                        new
                        {
                            Id = new Guid("4b810ef7-7216-4878-87d0-6f16b376d2f7"),
                            CustomPropertyId = new Guid("48b470db-3a05-45a5-bdb4-2244bae40118"),
                            ItemId = new Guid("9b36e83f-13d6-4baa-b105-1b3030aee754"),
                            Value = "Handmade Soft Chips"
                        },
                        new
                        {
                            Id = new Guid("a1ddbfab-56eb-4f15-a05a-512c40c0f299"),
                            CustomPropertyId = new Guid("e35ebda8-1e86-46b3-997f-b074fa69cc32"),
                            ItemId = new Guid("b6461a06-7135-45f3-a4c2-774bf3183802"),
                            Value = "Sleek Concrete Chicken"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b89745e-4de9-45b7-9fc4-f53e99efc26a"),
                            CollectionId = new Guid("a44ea579-0df7-4687-9823-741183a917d3"),
                            CreatedAt = new DateTime(2022, 8, 23, 17, 31, 25, 173, DateTimeKind.Local).AddTicks(3073),
                            Name = "Small Fresh Towels"
                        },
                        new
                        {
                            Id = new Guid("8b7fdde1-df2f-48af-8a0d-87673ab34d99"),
                            CollectionId = new Guid("4231d379-fd0a-44e5-9c5b-7d926bd8fdbe"),
                            CreatedAt = new DateTime(2023, 6, 19, 9, 48, 4, 369, DateTimeKind.Local).AddTicks(824),
                            Name = "Sleek Frozen Soap"
                        },
                        new
                        {
                            Id = new Guid("9a9280c5-9506-472d-9088-494f671ed08e"),
                            CollectionId = new Guid("5d68491e-7009-43eb-908a-44cf68028eaa"),
                            CreatedAt = new DateTime(2022, 9, 9, 14, 31, 5, 924, DateTimeKind.Local).AddTicks(7257),
                            Name = "Tasty Rubber Car"
                        },
                        new
                        {
                            Id = new Guid("77b2f469-d432-4f8b-bff3-d6a2aa07faca"),
                            CollectionId = new Guid("76e2f6cf-a9b1-459a-8084-f5ec21553990"),
                            CreatedAt = new DateTime(2023, 2, 28, 3, 57, 5, 90, DateTimeKind.Local).AddTicks(7270),
                            Name = "Sleek Wooden Pants"
                        },
                        new
                        {
                            Id = new Guid("87b428f7-d1d1-44d3-9d83-88c53ea983d5"),
                            CollectionId = new Guid("228c90ca-50ea-4357-9d5a-da6b70a1ffdb"),
                            CreatedAt = new DateTime(2023, 2, 19, 1, 8, 13, 585, DateTimeKind.Local).AddTicks(3232),
                            Name = "Unbranded Frozen Towels"
                        },
                        new
                        {
                            Id = new Guid("cc463718-a8e3-47ac-8ad2-8b5a8d46c8be"),
                            CollectionId = new Guid("82ac6111-97a5-4ef5-b585-2ff4af3d4921"),
                            CreatedAt = new DateTime(2023, 5, 30, 9, 54, 45, 535, DateTimeKind.Local).AddTicks(6325),
                            Name = "Refined Metal Shirt"
                        },
                        new
                        {
                            Id = new Guid("b1bfe819-1de9-4475-bdf7-39755fcd94b8"),
                            CollectionId = new Guid("9d257017-02a9-4a95-b0c1-029fea8c6057"),
                            CreatedAt = new DateTime(2023, 6, 1, 3, 37, 59, 764, DateTimeKind.Local).AddTicks(5377),
                            Name = "Intelligent Wooden Keyboard"
                        },
                        new
                        {
                            Id = new Guid("b7e55469-a480-49cd-8f16-892a9cff156f"),
                            CollectionId = new Guid("efef1b27-3d45-49fd-86e6-ae8bd477dd8e"),
                            CreatedAt = new DateTime(2023, 3, 16, 4, 26, 22, 359, DateTimeKind.Local).AddTicks(9106),
                            Name = "Generic Concrete Chips"
                        },
                        new
                        {
                            Id = new Guid("9b36e83f-13d6-4baa-b105-1b3030aee754"),
                            CollectionId = new Guid("d5789970-148f-46c0-8718-9fdd8d0caad2"),
                            CreatedAt = new DateTime(2022, 9, 20, 13, 19, 44, 96, DateTimeKind.Local).AddTicks(5887),
                            Name = "Tasty Metal Sausages"
                        },
                        new
                        {
                            Id = new Guid("b6461a06-7135-45f3-a4c2-774bf3183802"),
                            CollectionId = new Guid("b8e227bb-1551-4ecc-b8d0-7b7b912c79db"),
                            CreatedAt = new DateTime(2022, 9, 9, 10, 22, 34, 516, DateTimeKind.Local).AddTicks(4453),
                            Name = "Handcrafted Cotton Car"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("74506b8c-79c6-4fe0-820b-c43f5bacf8eb"),
                            Email = "otabek.r743@gmail.com",
                            FirstName = "Admin",
                            IsAdmin = true,
                            IsBlocked = false,
                            LastName = "Admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEJsQhxvRZnTRqO2Jk9q/36tRhT1LD9BIAUsMuO2YrxZ4UlTc6QRjTD5Cbb7uA/sSsw=="
                        },
                        new
                        {
                            Id = new Guid("92ac60de-e8ec-4bb5-ba54-582661737f87"),
                            Email = "Pamela96@yahoo.com",
                            FirstName = "Pamela",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Treutel",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("353b8c94-eb78-4d2c-9cad-748dfecd7e16"),
                            Email = "Valerie_Senger@yahoo.com",
                            FirstName = "Valerie",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Senger",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("f29e8883-b32b-4bd6-afc9-2a4a56b7529f"),
                            Email = "Jaime18@hotmail.com",
                            FirstName = "Jaime",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wisoky",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("533dabbb-b813-4781-b26b-a11896db5e68"),
                            Email = "Raquel.Kozey57@yahoo.com",
                            FirstName = "Raquel",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Kozey",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("2e8019d7-603d-4b66-949f-63940adf828a"),
                            Email = "Penny_Quigley@yahoo.com",
                            FirstName = "Penny",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Quigley",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("b7a00f42-eede-431d-94b7-de22a258705f"),
                            Email = "Raquel47@gmail.com",
                            FirstName = "Raquel",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Stokes",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("4b2559e3-db98-446c-a781-27733e204c9a"),
                            Email = "Ricky.West@gmail.com",
                            FirstName = "Ricky",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "West",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("5b27c762-bb51-4710-a302-6c25ce8d9219"),
                            Email = "Stephen.Armstrong@yahoo.com",
                            FirstName = "Stephen",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Armstrong",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("c7391c3f-72a1-4afa-b1e3-15fec33c9b4b"),
                            Email = "Stuart45@gmail.com",
                            FirstName = "Stuart",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Waelchi",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("a6298fe0-83b0-4638-b38a-1cb3566fd83d"),
                            Email = "Jason_Simonis@hotmail.com",
                            FirstName = "Jason",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Simonis",
                            PasswordHash = ""
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.HasOne("MyItems.Backend.Models.User", "User")
                        .WithMany("Collections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("CustomProperties")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.HasOne("MyItems.Backend.Models.CustomProperty", "CustomProperty")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("CustomPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyItems.Backend.Models.Item", "Item")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CustomProperty");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("Items")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Navigation("CustomProperties");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Navigation("Collections");
                });
#pragma warning restore 612, 618
        }
    }
}
