// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyItems.Backend;

#nullable disable

namespace MyItems.Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230709191054_AddCustomPropertyValue")]
    partial class AddCustomPropertyValue
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Collections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3f2bc65-bf24-4e42-931f-2bb524158001"),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/640/480/?image=528",
                            Name = "Sleek Steel Pants",
                            Theme = "Intelligent",
                            UserId = new Guid("59705464-8fac-4b63-8dcd-e2d355fc6371")
                        },
                        new
                        {
                            Id = new Guid("b18cd452-10dc-40c5-b0fb-f36c38532544"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/640/480/?image=348",
                            Name = "Refined Steel Keyboard",
                            Theme = "Incredible",
                            UserId = new Guid("a50a0c05-9a8e-4d37-a2a5-699faef074db")
                        },
                        new
                        {
                            Id = new Guid("65bbf142-d7cb-4584-b4e3-b370adee8289"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/640/480/?image=991",
                            Name = "Refined Wooden Car",
                            Theme = "Intelligent",
                            UserId = new Guid("59705464-8fac-4b63-8dcd-e2d355fc6371")
                        },
                        new
                        {
                            Id = new Guid("f252614f-8355-4306-9b92-ff5e300effb6"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/640/480/?image=993",
                            Name = "Awesome Steel Chair",
                            Theme = "Tasty",
                            UserId = new Guid("8a65f70f-4341-431e-a85f-ace7a76d3361")
                        },
                        new
                        {
                            Id = new Guid("88f035c3-752e-4cef-8b78-be1118067f25"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/640/480/?image=1080",
                            Name = "Incredible Wooden Computer",
                            Theme = "Handcrafted",
                            UserId = new Guid("4d9d26cc-0632-4cd6-aeb8-e2541eda0276")
                        },
                        new
                        {
                            Id = new Guid("23e12790-846f-4b35-b255-d69bcf3b226b"),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/640/480/?image=25",
                            Name = "Small Metal Fish",
                            Theme = "Fantastic",
                            UserId = new Guid("10d8b4ae-f5d3-4de7-9c65-95cdf29e8f41")
                        },
                        new
                        {
                            Id = new Guid("7cc56c20-554e-4231-8cfc-32478b91d14e"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/640/480/?image=843",
                            Name = "Gorgeous Rubber Mouse",
                            Theme = "Practical",
                            UserId = new Guid("a50a0c05-9a8e-4d37-a2a5-699faef074db")
                        },
                        new
                        {
                            Id = new Guid("ea827064-7b18-4239-9b3e-1cc9c026dc43"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/640/480/?image=989",
                            Name = "Small Wooden Cheese",
                            Theme = "Handmade",
                            UserId = new Guid("cb7ef5b1-00f2-4e48-8524-da383a17d9c2")
                        },
                        new
                        {
                            Id = new Guid("15bcd2f5-f1d9-473c-bcf1-5206093e7ed0"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/640/480/?image=434",
                            Name = "Small Fresh Bike",
                            Theme = "Practical",
                            UserId = new Guid("59705464-8fac-4b63-8dcd-e2d355fc6371")
                        },
                        new
                        {
                            Id = new Guid("e159584b-8151-4811-bbae-498a7c093595"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/640/480/?image=169",
                            Name = "Fantastic Soft Mouse",
                            Theme = "Unbranded",
                            UserId = new Guid("cb7ef5b1-00f2-4e48-8524-da383a17d9c2")
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("CustomProperty");

                    b.HasData(
                        new
                        {
                            Id = new Guid("267e62da-3277-437e-b079-f7d766527a4d"),
                            CollectionId = new Guid("d3f2bc65-bf24-4e42-931f-2bb524158001"),
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("ab1f2876-cece-49ef-950e-d3027e4c9751"),
                            CollectionId = new Guid("b18cd452-10dc-40c5-b0fb-f36c38532544"),
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("ab236aaf-1be6-4578-91e0-57bbc546b46f"),
                            CollectionId = new Guid("65bbf142-d7cb-4584-b4e3-b370adee8289"),
                            TypeProperty = "string"
                        },
                        new
                        {
                            Id = new Guid("324f36e4-e92b-4ef0-a007-dedaf07b7427"),
                            CollectionId = new Guid("f252614f-8355-4306-9b92-ff5e300effb6"),
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("c668685b-2bbe-4fd0-9824-84f3888b15db"),
                            CollectionId = new Guid("88f035c3-752e-4cef-8b78-be1118067f25"),
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("3f1917e0-d9d9-45c0-a17e-bd277a66bad3"),
                            CollectionId = new Guid("23e12790-846f-4b35-b255-d69bcf3b226b"),
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("4e59dfe1-3da4-4165-b0e0-484d08cb3c6a"),
                            CollectionId = new Guid("7cc56c20-554e-4231-8cfc-32478b91d14e"),
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("90417749-2f79-48da-a304-f11dbc2dc53b"),
                            CollectionId = new Guid("ea827064-7b18-4239-9b3e-1cc9c026dc43"),
                            TypeProperty = "string"
                        },
                        new
                        {
                            Id = new Guid("37517b7c-5413-46d6-b737-2dcf398166a5"),
                            CollectionId = new Guid("15bcd2f5-f1d9-473c-bcf1-5206093e7ed0"),
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("fa8becf1-49f9-4ad1-b754-92ac082b5896"),
                            CollectionId = new Guid("e159584b-8151-4811-bbae-498a7c093595"),
                            TypeProperty = "boolean"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomPropertyId");

                    b.HasIndex("ItemId");

                    b.ToTable("CustomPropertyValue");

                    b.HasData(
                        new
                        {
                            Id = new Guid("114c9de2-83c7-4f59-a39c-59c37afaf42d"),
                            CustomPropertyId = new Guid("267e62da-3277-437e-b079-f7d766527a4d"),
                            ItemId = new Guid("d35067de-1598-4a6b-943d-804c835b530e"),
                            Value = "Small Cotton Chicken"
                        },
                        new
                        {
                            Id = new Guid("da611f50-ec0c-419a-81bd-c4819a479158"),
                            CustomPropertyId = new Guid("ab1f2876-cece-49ef-950e-d3027e4c9751"),
                            ItemId = new Guid("9e9475cd-496b-4638-a3b9-5b3055dfc495"),
                            Value = "Handmade Plastic Table"
                        },
                        new
                        {
                            Id = new Guid("03ccafe1-dee7-449a-8dc0-d7056e6a51a3"),
                            CustomPropertyId = new Guid("ab236aaf-1be6-4578-91e0-57bbc546b46f"),
                            ItemId = new Guid("93af4d22-ee7d-4d66-8468-f0d6c6d02c29"),
                            Value = "Incredible Steel Fish"
                        },
                        new
                        {
                            Id = new Guid("0c8c6ae8-5d60-4001-8396-6c78fa241771"),
                            CustomPropertyId = new Guid("324f36e4-e92b-4ef0-a007-dedaf07b7427"),
                            ItemId = new Guid("fa064a27-d6d7-48b5-9871-ead8cd4dc7bd"),
                            Value = "Rustic Steel Bike"
                        },
                        new
                        {
                            Id = new Guid("3552c213-fd7e-4862-b61c-c705006e0338"),
                            CustomPropertyId = new Guid("c668685b-2bbe-4fd0-9824-84f3888b15db"),
                            ItemId = new Guid("b7b24758-4f86-4d10-a576-83879fb25cda"),
                            Value = "Incredible Frozen Tuna"
                        },
                        new
                        {
                            Id = new Guid("c621b611-a0c8-412c-8284-3a733ff3386b"),
                            CustomPropertyId = new Guid("3f1917e0-d9d9-45c0-a17e-bd277a66bad3"),
                            ItemId = new Guid("dba960fd-ea8a-466d-b7b8-3877e639da1b"),
                            Value = "Gorgeous Frozen Shirt"
                        },
                        new
                        {
                            Id = new Guid("fd1b6394-c0e2-440a-bc99-6ec0d61e7028"),
                            CustomPropertyId = new Guid("4e59dfe1-3da4-4165-b0e0-484d08cb3c6a"),
                            ItemId = new Guid("7f36e017-e629-4585-b350-ec7a6c11f6e0"),
                            Value = "Handcrafted Wooden Chips"
                        },
                        new
                        {
                            Id = new Guid("4624f7d3-8c92-42b7-ba4e-4ece588d0297"),
                            CustomPropertyId = new Guid("90417749-2f79-48da-a304-f11dbc2dc53b"),
                            ItemId = new Guid("f4eecdec-b74a-4a09-a1ee-bb987329ff59"),
                            Value = "Awesome Wooden Hat"
                        },
                        new
                        {
                            Id = new Guid("b8f2ed5d-7709-4299-92bf-99d347f37876"),
                            CustomPropertyId = new Guid("37517b7c-5413-46d6-b737-2dcf398166a5"),
                            ItemId = new Guid("97f66092-f963-4047-84e4-108a3579505b"),
                            Value = "Generic Rubber Sausages"
                        },
                        new
                        {
                            Id = new Guid("57545b46-14ca-4fbf-91ec-defbfb106235"),
                            CustomPropertyId = new Guid("fa8becf1-49f9-4ad1-b754-92ac082b5896"),
                            ItemId = new Guid("c3c22420-5e86-457c-835f-21fe9b77a6e5"),
                            Value = "Intelligent Metal Bacon"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d35067de-1598-4a6b-943d-804c835b530e"),
                            CollectionId = new Guid("d3f2bc65-bf24-4e42-931f-2bb524158001"),
                            CreatedAt = new DateTime(2023, 3, 1, 5, 19, 6, 98, DateTimeKind.Local).AddTicks(2387),
                            Name = "Awesome Fresh Shirt"
                        },
                        new
                        {
                            Id = new Guid("9e9475cd-496b-4638-a3b9-5b3055dfc495"),
                            CollectionId = new Guid("b18cd452-10dc-40c5-b0fb-f36c38532544"),
                            CreatedAt = new DateTime(2022, 9, 23, 23, 21, 18, 449, DateTimeKind.Local).AddTicks(3548),
                            Name = "Practical Fresh Chips"
                        },
                        new
                        {
                            Id = new Guid("93af4d22-ee7d-4d66-8468-f0d6c6d02c29"),
                            CollectionId = new Guid("65bbf142-d7cb-4584-b4e3-b370adee8289"),
                            CreatedAt = new DateTime(2022, 12, 16, 7, 29, 48, 624, DateTimeKind.Local).AddTicks(4497),
                            Name = "Incredible Steel Pizza"
                        },
                        new
                        {
                            Id = new Guid("fa064a27-d6d7-48b5-9871-ead8cd4dc7bd"),
                            CollectionId = new Guid("f252614f-8355-4306-9b92-ff5e300effb6"),
                            CreatedAt = new DateTime(2022, 12, 20, 12, 15, 15, 370, DateTimeKind.Local).AddTicks(5879),
                            Name = "Ergonomic Fresh Pizza"
                        },
                        new
                        {
                            Id = new Guid("b7b24758-4f86-4d10-a576-83879fb25cda"),
                            CollectionId = new Guid("88f035c3-752e-4cef-8b78-be1118067f25"),
                            CreatedAt = new DateTime(2023, 6, 9, 5, 24, 0, 484, DateTimeKind.Local).AddTicks(1828),
                            Name = "Ergonomic Concrete Ball"
                        },
                        new
                        {
                            Id = new Guid("dba960fd-ea8a-466d-b7b8-3877e639da1b"),
                            CollectionId = new Guid("23e12790-846f-4b35-b255-d69bcf3b226b"),
                            CreatedAt = new DateTime(2022, 12, 17, 22, 30, 33, 695, DateTimeKind.Local).AddTicks(2762),
                            Name = "Gorgeous Frozen Mouse"
                        },
                        new
                        {
                            Id = new Guid("7f36e017-e629-4585-b350-ec7a6c11f6e0"),
                            CollectionId = new Guid("7cc56c20-554e-4231-8cfc-32478b91d14e"),
                            CreatedAt = new DateTime(2022, 8, 31, 23, 56, 35, 67, DateTimeKind.Local).AddTicks(5636),
                            Name = "Incredible Metal Gloves"
                        },
                        new
                        {
                            Id = new Guid("f4eecdec-b74a-4a09-a1ee-bb987329ff59"),
                            CollectionId = new Guid("ea827064-7b18-4239-9b3e-1cc9c026dc43"),
                            CreatedAt = new DateTime(2023, 6, 2, 2, 41, 26, 435, DateTimeKind.Local).AddTicks(225),
                            Name = "Intelligent Cotton Gloves"
                        },
                        new
                        {
                            Id = new Guid("97f66092-f963-4047-84e4-108a3579505b"),
                            CollectionId = new Guid("15bcd2f5-f1d9-473c-bcf1-5206093e7ed0"),
                            CreatedAt = new DateTime(2022, 7, 27, 12, 32, 41, 347, DateTimeKind.Local).AddTicks(9756),
                            Name = "Intelligent Fresh Shirt"
                        },
                        new
                        {
                            Id = new Guid("c3c22420-5e86-457c-835f-21fe9b77a6e5"),
                            CollectionId = new Guid("e159584b-8151-4811-bbae-498a7c093595"),
                            CreatedAt = new DateTime(2023, 1, 31, 3, 55, 33, 681, DateTimeKind.Local).AddTicks(5003),
                            Name = "Intelligent Fresh Hat"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("821fc148-61f5-494f-b616-10998cfacd64"),
                            Email = "otabek.pro@hotmail.com",
                            FirstName = "Admin",
                            IsAdmin = true,
                            IsBlocked = false,
                            LastName = "Admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEJsQhxvRZnTRqO2Jk9q/36tRhT1LD9BIAUsMuO2YrxZ4UlTc6QRjTD5Cbb7uA/sSsw=="
                        },
                        new
                        {
                            Id = new Guid("8a65f70f-4341-431e-a85f-ace7a76d3361"),
                            Email = "Lucia65@gmail.com",
                            FirstName = "Lucia",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Predovic",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("1c88fe6f-711c-4c95-be53-3024d95c1522"),
                            Email = "Jill.Lesch@hotmail.com",
                            FirstName = "Jill",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Lesch",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("a50a0c05-9a8e-4d37-a2a5-699faef074db"),
                            Email = "Zachary73@gmail.com",
                            FirstName = "Zachary",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Braun",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("aa33a6d5-bc0d-4b08-a0d7-62fa302a2d0a"),
                            Email = "Julio_Schulist51@hotmail.com",
                            FirstName = "Julio",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Schulist",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("cb7ef5b1-00f2-4e48-8524-da383a17d9c2"),
                            Email = "Phil_Nader@yahoo.com",
                            FirstName = "Phil",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Nader",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("8b44c494-ce8c-433d-b54d-e4a4451a5b61"),
                            Email = "Gina_Friesen@yahoo.com",
                            FirstName = "Gina",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Friesen",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("4d9d26cc-0632-4cd6-aeb8-e2541eda0276"),
                            Email = "Kathleen93@gmail.com",
                            FirstName = "Kathleen",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Kuvalis",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("59705464-8fac-4b63-8dcd-e2d355fc6371"),
                            Email = "Lori_Kutch4@yahoo.com",
                            FirstName = "Lori",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Kutch",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("9ecf9876-d630-4e71-bd10-ab47d11a622d"),
                            Email = "Maureen.Willms53@yahoo.com",
                            FirstName = "Maureen",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Willms",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("10d8b4ae-f5d3-4de7-9c65-95cdf29e8f41"),
                            Email = "Lillie.Wisozk90@yahoo.com",
                            FirstName = "Lillie",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wisozk",
                            PasswordHash = ""
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.HasOne("MyItems.Backend.Models.User", "User")
                        .WithMany("Collections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("CustomProperties")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.HasOne("MyItems.Backend.Models.CustomProperty", "CustomProperty")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("CustomPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyItems.Backend.Models.Item", "Item")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CustomProperty");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("Items")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Navigation("CustomProperties");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Navigation("Collections");
                });
#pragma warning restore 612, 618
        }
    }
}
