// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyItems.Backend;

#nullable disable

namespace MyItems.Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230720221406_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Collections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("acb929b1-3c81-48b8-bf3b-6a3256adc2e9"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/640/480/?image=68",
                            Name = "Ergonomic Granite Bacon",
                            Theme = "Handmade",
                            UserId = new Guid("cae3ed0a-691d-4ce6-93c6-b44b0b679886")
                        },
                        new
                        {
                            Id = new Guid("349e82da-20ab-4bc2-b763-18d3161c7ed9"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/640/480/?image=695",
                            Name = "Intelligent Granite Bacon",
                            Theme = "Unbranded",
                            UserId = new Guid("60efcc8b-5265-4d36-a94f-48ea4f9e3fab")
                        },
                        new
                        {
                            Id = new Guid("d60ab275-70e3-4fed-a05e-55c174073e4d"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/640/480/?image=807",
                            Name = "Handmade Granite Shirt",
                            Theme = "Rustic",
                            UserId = new Guid("f69fb4f6-6c9a-45e6-a099-a3cefd8bd6f3")
                        },
                        new
                        {
                            Id = new Guid("9f678230-11ea-4826-8c55-434445e22539"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/640/480/?image=953",
                            Name = "Practical Metal Mouse",
                            Theme = "Refined",
                            UserId = new Guid("60efcc8b-5265-4d36-a94f-48ea4f9e3fab")
                        },
                        new
                        {
                            Id = new Guid("1aad8020-a44d-419b-ad09-dc76599aac43"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/640/480/?image=101",
                            Name = "Licensed Rubber Table",
                            Theme = "Gorgeous",
                            UserId = new Guid("cae3ed0a-691d-4ce6-93c6-b44b0b679886")
                        },
                        new
                        {
                            Id = new Guid("5548e8fa-9b24-4236-ab7f-799a84e5143a"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/640/480/?image=384",
                            Name = "Practical Plastic Pants",
                            Theme = "Generic",
                            UserId = new Guid("f69fb4f6-6c9a-45e6-a099-a3cefd8bd6f3")
                        },
                        new
                        {
                            Id = new Guid("3a93d32e-7971-45ec-8b92-ebd38626961f"),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/640/480/?image=402",
                            Name = "Fantastic Granite Pizza",
                            Theme = "Intelligent",
                            UserId = new Guid("75008141-5aab-423e-8824-fec9dde7bc0b")
                        },
                        new
                        {
                            Id = new Guid("3fa41386-370a-4177-ae6a-7183dfbb230d"),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/640/480/?image=985",
                            Name = "Refined Metal Sausages",
                            Theme = "Sleek",
                            UserId = new Guid("46e9b799-2cac-4a2e-b496-e1a8353803c1")
                        },
                        new
                        {
                            Id = new Guid("8f3d56e2-e69e-4617-a493-e33d2611878e"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/640/480/?image=245",
                            Name = "Refined Soft Tuna",
                            Theme = "Fantastic",
                            UserId = new Guid("46e9b799-2cac-4a2e-b496-e1a8353803c1")
                        },
                        new
                        {
                            Id = new Guid("a188a239-5b6c-47e9-8f81-00db40ff5280"),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/640/480/?image=228",
                            Name = "Awesome Concrete Gloves",
                            Theme = "Handcrafted",
                            UserId = new Guid("46e9b799-2cac-4a2e-b496-e1a8353803c1")
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("CustomProperties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b1f9306-4f21-4d90-8021-4fae6e696177"),
                            CollectionId = new Guid("acb929b1-3c81-48b8-bf3b-6a3256adc2e9"),
                            Name = "Davis, Spencer and Dare",
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("718f5815-564b-455f-ac76-af3e55eb3e2b"),
                            CollectionId = new Guid("349e82da-20ab-4bc2-b763-18d3161c7ed9"),
                            Name = "Upton, Ondricka and Nienow",
                            TypeProperty = "string"
                        },
                        new
                        {
                            Id = new Guid("99c45d62-9d51-4817-be49-20d877dc1517"),
                            CollectionId = new Guid("d60ab275-70e3-4fed-a05e-55c174073e4d"),
                            Name = "Bogisich, Weimann and Farrell",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("0ba63716-1fa8-42aa-a186-bd9a607d2e53"),
                            CollectionId = new Guid("9f678230-11ea-4826-8c55-434445e22539"),
                            Name = "Volkman LLC",
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("9016ad5f-9402-4529-a558-4157c17d3fc1"),
                            CollectionId = new Guid("1aad8020-a44d-419b-ad09-dc76599aac43"),
                            Name = "Ziemann Group",
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("6d681cb1-7c4e-459e-80f4-e84c06f229ae"),
                            CollectionId = new Guid("5548e8fa-9b24-4236-ab7f-799a84e5143a"),
                            Name = "Brown Inc",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("85544e5b-f336-4724-8429-a5707a537e68"),
                            CollectionId = new Guid("3a93d32e-7971-45ec-8b92-ebd38626961f"),
                            Name = "Abernathy - Kassulke",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("626e0e1a-712a-427e-96ec-8e0ea088a97b"),
                            CollectionId = new Guid("3fa41386-370a-4177-ae6a-7183dfbb230d"),
                            Name = "Osinski and Sons",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("6e095e7e-6930-402d-b8e3-61924cb2135b"),
                            CollectionId = new Guid("8f3d56e2-e69e-4617-a493-e33d2611878e"),
                            Name = "Wehner LLC",
                            TypeProperty = "string"
                        },
                        new
                        {
                            Id = new Guid("11f5828c-1558-48d1-ba67-56bdcd9c811c"),
                            CollectionId = new Guid("a188a239-5b6c-47e9-8f81-00db40ff5280"),
                            Name = "Hegmann - Graham",
                            TypeProperty = "string"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomPropertyId");

                    b.HasIndex("ItemId");

                    b.ToTable("CustomPropertyValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2c7e18a-da79-4af6-ad0a-fb0165491602"),
                            CustomPropertyId = new Guid("1b1f9306-4f21-4d90-8021-4fae6e696177"),
                            ItemId = new Guid("5cab4146-3f1f-43e7-95a9-1f82518b4a16"),
                            Value = "Licensed Steel Chicken"
                        },
                        new
                        {
                            Id = new Guid("53d2757e-1311-435b-ab29-4f1485cd6172"),
                            CustomPropertyId = new Guid("718f5815-564b-455f-ac76-af3e55eb3e2b"),
                            ItemId = new Guid("bdf2bdda-24fb-4fc2-b121-69209cbb6bde"),
                            Value = "Incredible Fresh Shoes"
                        },
                        new
                        {
                            Id = new Guid("b6700ca2-83d3-4f89-9a79-3a74c4165e74"),
                            CustomPropertyId = new Guid("99c45d62-9d51-4817-be49-20d877dc1517"),
                            ItemId = new Guid("77cda0a2-f6f0-497c-933e-629e9f338c1d"),
                            Value = "Awesome Frozen Tuna"
                        },
                        new
                        {
                            Id = new Guid("bf25ebc0-266b-42ce-8744-05dd8f3bd5d3"),
                            CustomPropertyId = new Guid("0ba63716-1fa8-42aa-a186-bd9a607d2e53"),
                            ItemId = new Guid("6b553a0b-6c6b-40ec-9ee6-ecb0c488132f"),
                            Value = "Fantastic Metal Table"
                        },
                        new
                        {
                            Id = new Guid("a80aed97-0201-4144-ad4e-9cecdded40b9"),
                            CustomPropertyId = new Guid("9016ad5f-9402-4529-a558-4157c17d3fc1"),
                            ItemId = new Guid("6583da49-37b4-4fc2-9b95-9e425bb15093"),
                            Value = "Generic Steel Salad"
                        },
                        new
                        {
                            Id = new Guid("50487bef-8ee4-41aa-a328-de30abe456ae"),
                            CustomPropertyId = new Guid("6d681cb1-7c4e-459e-80f4-e84c06f229ae"),
                            ItemId = new Guid("62da1db3-8edb-40f2-bfcf-ade0fe4ba783"),
                            Value = "Rustic Rubber Gloves"
                        },
                        new
                        {
                            Id = new Guid("4d768cc0-a8a7-4874-8ae9-5ef3bdfdc21c"),
                            CustomPropertyId = new Guid("85544e5b-f336-4724-8429-a5707a537e68"),
                            ItemId = new Guid("fae1bf87-85af-4c03-8f59-c65cd922f90c"),
                            Value = "Fantastic Concrete Mouse"
                        },
                        new
                        {
                            Id = new Guid("b1463858-114b-405e-9d03-ad4a8449d435"),
                            CustomPropertyId = new Guid("626e0e1a-712a-427e-96ec-8e0ea088a97b"),
                            ItemId = new Guid("1e0331ae-baad-4ba4-8b09-8141907e03ef"),
                            Value = "Small Fresh Mouse"
                        },
                        new
                        {
                            Id = new Guid("a46355bd-a064-46ec-8a36-fe8d8c3726a7"),
                            CustomPropertyId = new Guid("6e095e7e-6930-402d-b8e3-61924cb2135b"),
                            ItemId = new Guid("b670afec-3724-404c-8370-49882acc5f7d"),
                            Value = "Practical Fresh Chips"
                        },
                        new
                        {
                            Id = new Guid("c2a4292e-63dd-451f-b96a-d7a87022e4e0"),
                            CustomPropertyId = new Guid("11f5828c-1558-48d1-ba67-56bdcd9c811c"),
                            ItemId = new Guid("a20422f6-29f0-4820-9b9b-351aae427763"),
                            Value = "Fantastic Steel Hat"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5cab4146-3f1f-43e7-95a9-1f82518b4a16"),
                            CollectionId = new Guid("acb929b1-3c81-48b8-bf3b-6a3256adc2e9"),
                            CreatedAt = new DateTime(2023, 1, 12, 6, 55, 14, 295, DateTimeKind.Local).AddTicks(6569),
                            Name = "Incredible Metal Chicken"
                        },
                        new
                        {
                            Id = new Guid("bdf2bdda-24fb-4fc2-b121-69209cbb6bde"),
                            CollectionId = new Guid("349e82da-20ab-4bc2-b763-18d3161c7ed9"),
                            CreatedAt = new DateTime(2022, 9, 27, 18, 33, 7, 72, DateTimeKind.Local).AddTicks(7811),
                            Name = "Handmade Wooden Ball"
                        },
                        new
                        {
                            Id = new Guid("77cda0a2-f6f0-497c-933e-629e9f338c1d"),
                            CollectionId = new Guid("d60ab275-70e3-4fed-a05e-55c174073e4d"),
                            CreatedAt = new DateTime(2023, 6, 12, 19, 53, 5, 657, DateTimeKind.Local).AddTicks(8371),
                            Name = "Handmade Wooden Salad"
                        },
                        new
                        {
                            Id = new Guid("6b553a0b-6c6b-40ec-9ee6-ecb0c488132f"),
                            CollectionId = new Guid("9f678230-11ea-4826-8c55-434445e22539"),
                            CreatedAt = new DateTime(2023, 6, 24, 1, 30, 41, 479, DateTimeKind.Local).AddTicks(7015),
                            Name = "Incredible Plastic Fish"
                        },
                        new
                        {
                            Id = new Guid("6583da49-37b4-4fc2-9b95-9e425bb15093"),
                            CollectionId = new Guid("1aad8020-a44d-419b-ad09-dc76599aac43"),
                            CreatedAt = new DateTime(2023, 4, 19, 6, 10, 51, 511, DateTimeKind.Local).AddTicks(7605),
                            Name = "Awesome Soft Tuna"
                        },
                        new
                        {
                            Id = new Guid("62da1db3-8edb-40f2-bfcf-ade0fe4ba783"),
                            CollectionId = new Guid("5548e8fa-9b24-4236-ab7f-799a84e5143a"),
                            CreatedAt = new DateTime(2022, 10, 23, 9, 40, 53, 422, DateTimeKind.Local).AddTicks(6365),
                            Name = "Sleek Metal Mouse"
                        },
                        new
                        {
                            Id = new Guid("fae1bf87-85af-4c03-8f59-c65cd922f90c"),
                            CollectionId = new Guid("3a93d32e-7971-45ec-8b92-ebd38626961f"),
                            CreatedAt = new DateTime(2022, 7, 25, 1, 27, 38, 474, DateTimeKind.Local).AddTicks(3907),
                            Name = "Intelligent Steel Pants"
                        },
                        new
                        {
                            Id = new Guid("1e0331ae-baad-4ba4-8b09-8141907e03ef"),
                            CollectionId = new Guid("3fa41386-370a-4177-ae6a-7183dfbb230d"),
                            CreatedAt = new DateTime(2022, 9, 10, 12, 36, 29, 777, DateTimeKind.Local).AddTicks(1063),
                            Name = "Practical Steel Shirt"
                        },
                        new
                        {
                            Id = new Guid("b670afec-3724-404c-8370-49882acc5f7d"),
                            CollectionId = new Guid("8f3d56e2-e69e-4617-a493-e33d2611878e"),
                            CreatedAt = new DateTime(2022, 9, 15, 10, 46, 21, 411, DateTimeKind.Local).AddTicks(8554),
                            Name = "Refined Granite Shoes"
                        },
                        new
                        {
                            Id = new Guid("a20422f6-29f0-4820-9b9b-351aae427763"),
                            CollectionId = new Guid("a188a239-5b6c-47e9-8f81-00db40ff5280"),
                            CreatedAt = new DateTime(2022, 12, 31, 7, 9, 36, 642, DateTimeKind.Local).AddTicks(9224),
                            Name = "Sleek Frozen Hat"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61fef2d6-5335-4e06-a431-aac20fe8638b"),
                            Email = "otabek.r743@gmail.com",
                            FirstName = "Admin",
                            IsAdmin = true,
                            IsBlocked = false,
                            LastName = "Admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEJsQhxvRZnTRqO2Jk9q/36tRhT1LD9BIAUsMuO2YrxZ4UlTc6QRjTD5Cbb7uA/sSsw=="
                        },
                        new
                        {
                            Id = new Guid("d956b6ee-48fe-490c-a26f-75bd9905c5c7"),
                            Email = "Denise.Miller27@gmail.com",
                            FirstName = "Denise",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Miller",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("48b0a037-99ee-4db0-8f6f-06ef49e6f80a"),
                            Email = "Brent.Torp64@gmail.com",
                            FirstName = "Brent",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Torp",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("2c4a3e7c-5874-4db8-84dc-50c84a16d4e1"),
                            Email = "Dustin_Schroeder55@hotmail.com",
                            FirstName = "Dustin",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Schroeder",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("d4c8bd32-a473-4393-b9cb-e1f60634fa6c"),
                            Email = "Lola_Lueilwitz@hotmail.com",
                            FirstName = "Lola",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Lueilwitz",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("60efcc8b-5265-4d36-a94f-48ea4f9e3fab"),
                            Email = "Andy.Corwin49@hotmail.com",
                            FirstName = "Andy",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Corwin",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("f69fb4f6-6c9a-45e6-a099-a3cefd8bd6f3"),
                            Email = "Kathy27@hotmail.com",
                            FirstName = "Kathy",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Bosco",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("cae3ed0a-691d-4ce6-93c6-b44b0b679886"),
                            Email = "Traci.McKenzie37@hotmail.com",
                            FirstName = "Traci",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "McKenzie",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("75008141-5aab-423e-8824-fec9dde7bc0b"),
                            Email = "Violet83@yahoo.com",
                            FirstName = "Violet",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Mante",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("c9be406d-7d44-43a7-8074-54c1a276073b"),
                            Email = "Anita4@gmail.com",
                            FirstName = "Anita",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wintheiser",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("46e9b799-2cac-4a2e-b496-e1a8353803c1"),
                            Email = "Tiffany.Wunsch21@hotmail.com",
                            FirstName = "Tiffany",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wunsch",
                            PasswordHash = ""
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.HasOne("MyItems.Backend.Models.User", "User")
                        .WithMany("Collections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("CustomProperties")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.HasOne("MyItems.Backend.Models.CustomProperty", "CustomProperty")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("CustomPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyItems.Backend.Models.Item", "Item")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CustomProperty");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("Items")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Navigation("CustomProperties");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Navigation("Collections");
                });
#pragma warning restore 612, 618
        }
    }
}
