// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyItems.Backend;

#nullable disable

namespace MyItems.Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230718232940_AddedPropertyName")]
    partial class AddedPropertyName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Collections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32992302-c094-45aa-ba77-8ff46e233e4d"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/640/480/?image=517",
                            Name = "Generic Granite Ball",
                            Theme = "Ergonomic",
                            UserId = new Guid("74145330-b0d8-49bf-b35b-7a87d7017bd8")
                        },
                        new
                        {
                            Id = new Guid("e08243ea-9887-4fd3-849c-a6f7ab52af0e"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/640/480/?image=607",
                            Name = "Refined Wooden Tuna",
                            Theme = "Licensed",
                            UserId = new Guid("386eb670-6272-4aab-85a1-b9be2e66af07")
                        },
                        new
                        {
                            Id = new Guid("c5a9e7a0-23fb-47de-a48b-813b6aa22fac"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/640/480/?image=337",
                            Name = "Generic Concrete Chair",
                            Theme = "Handmade",
                            UserId = new Guid("97efc793-9930-431e-8b26-29eb982da4ba")
                        },
                        new
                        {
                            Id = new Guid("6366b3c6-5b43-4a80-8b80-4325b22afa4e"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/640/480/?image=568",
                            Name = "Refined Granite Towels",
                            Theme = "Handmade",
                            UserId = new Guid("85fb96ea-3d60-47be-b22d-d07d3141f978")
                        },
                        new
                        {
                            Id = new Guid("582c0d1a-9b0f-4d00-a1c6-f29625d7a221"),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ImageUrl = "https://picsum.photos/640/480/?image=686",
                            Name = "Incredible Soft Chips",
                            Theme = "Intelligent",
                            UserId = new Guid("85fb96ea-3d60-47be-b22d-d07d3141f978")
                        },
                        new
                        {
                            Id = new Guid("d749406e-f2b2-410e-a67f-70f78743e0c9"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/640/480/?image=130",
                            Name = "Fantastic Soft Chips",
                            Theme = "Tasty",
                            UserId = new Guid("c9bd1c74-3e2f-4c06-bb4d-3d2a797281ec")
                        },
                        new
                        {
                            Id = new Guid("f3e8d31d-96f0-4170-8bed-d1e78d07732e"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/640/480/?image=1058",
                            Name = "Sleek Frozen Towels",
                            Theme = "Sleek",
                            UserId = new Guid("74145330-b0d8-49bf-b35b-7a87d7017bd8")
                        },
                        new
                        {
                            Id = new Guid("2bc1f455-bafd-4383-a201-707e477bff81"),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/640/480/?image=278",
                            Name = "Incredible Frozen Towels",
                            Theme = "Incredible",
                            UserId = new Guid("4c9b419d-eea1-4de1-b29c-5ca2e9761c2f")
                        },
                        new
                        {
                            Id = new Guid("8c714971-5a0e-4df8-8881-7587101c1dac"),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/640/480/?image=277",
                            Name = "Licensed Cotton Fish",
                            Theme = "Gorgeous",
                            UserId = new Guid("4c9b419d-eea1-4de1-b29c-5ca2e9761c2f")
                        },
                        new
                        {
                            Id = new Guid("9fe96455-8f95-4f31-9384-80d1e2eb9ade"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/640/480/?image=266",
                            Name = "Licensed Granite Computer",
                            Theme = "Unbranded",
                            UserId = new Guid("09ba65e9-85fb-48c0-a28d-81e8ec58407e")
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("CustomProperty");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4e116b8-c674-453f-b58a-7452f348f12f"),
                            CollectionId = new Guid("32992302-c094-45aa-ba77-8ff46e233e4d"),
                            Name = "Kilback LLC",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("e24616ca-c5f0-4ad8-aacc-341c8f824802"),
                            CollectionId = new Guid("e08243ea-9887-4fd3-849c-a6f7ab52af0e"),
                            Name = "Marvin, Kovacek and Cassin",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("882b04aa-3643-4e26-9fe9-35cb17d83d2e"),
                            CollectionId = new Guid("c5a9e7a0-23fb-47de-a48b-813b6aa22fac"),
                            Name = "Monahan, Sauer and McClure",
                            TypeProperty = "string"
                        },
                        new
                        {
                            Id = new Guid("6e12adc3-8f14-402d-9740-b8fbf57b6ab2"),
                            CollectionId = new Guid("6366b3c6-5b43-4a80-8b80-4325b22afa4e"),
                            Name = "Lehner, Conroy and Kessler",
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("59af4182-4457-4fb1-ad84-d7c4e83ef12e"),
                            CollectionId = new Guid("582c0d1a-9b0f-4d00-a1c6-f29625d7a221"),
                            Name = "Pfeffer, Hermiston and Reichert",
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("4c668a87-63fe-4cf9-acf7-f3ac8f33779f"),
                            CollectionId = new Guid("d749406e-f2b2-410e-a67f-70f78743e0c9"),
                            Name = "Schinner - Konopelski",
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("1f255537-eae2-4d23-8742-88ccc129d712"),
                            CollectionId = new Guid("f3e8d31d-96f0-4170-8bed-d1e78d07732e"),
                            Name = "Renner Inc",
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("bcbf3321-b78c-4e56-aa4a-872b87a5897b"),
                            CollectionId = new Guid("2bc1f455-bafd-4383-a201-707e477bff81"),
                            Name = "Simonis, Huels and Wolff",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("06a0382f-b198-4fea-88c0-8180c994d164"),
                            CollectionId = new Guid("8c714971-5a0e-4df8-8881-7587101c1dac"),
                            Name = "Welch - Feil",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("1f04bfec-9eb9-421d-bd7a-94bf3aeddec6"),
                            CollectionId = new Guid("9fe96455-8f95-4f31-9384-80d1e2eb9ade"),
                            Name = "Wilderman, Bradtke and Lind",
                            TypeProperty = "string"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomPropertyId");

                    b.HasIndex("ItemId");

                    b.ToTable("CustomPropertyValue");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0bc918d3-eecb-4c5e-bb37-faa4a59cb38f"),
                            CustomPropertyId = new Guid("a4e116b8-c674-453f-b58a-7452f348f12f"),
                            ItemId = new Guid("667ed1ef-2f2c-47fd-a82b-0c7c5bafa262"),
                            Value = "Licensed Fresh Shoes"
                        },
                        new
                        {
                            Id = new Guid("ebf90893-46a7-4855-b602-83a8f4084ffc"),
                            CustomPropertyId = new Guid("e24616ca-c5f0-4ad8-aacc-341c8f824802"),
                            ItemId = new Guid("77612384-ae54-4edb-8ba2-11a856e87933"),
                            Value = "Ergonomic Granite Shirt"
                        },
                        new
                        {
                            Id = new Guid("176c420e-7fcf-40b3-92a1-bc5c526adcc0"),
                            CustomPropertyId = new Guid("882b04aa-3643-4e26-9fe9-35cb17d83d2e"),
                            ItemId = new Guid("82bec1bc-4295-471c-a592-8f32489d3619"),
                            Value = "Fantastic Soft Keyboard"
                        },
                        new
                        {
                            Id = new Guid("c5a86210-5703-42b0-91b8-c8226d257731"),
                            CustomPropertyId = new Guid("6e12adc3-8f14-402d-9740-b8fbf57b6ab2"),
                            ItemId = new Guid("4d7f8ade-b1d6-4bdc-a1ed-4a76ab793bcb"),
                            Value = "Sleek Granite Salad"
                        },
                        new
                        {
                            Id = new Guid("6f83a17d-8e9b-477f-93de-ec5a292970d3"),
                            CustomPropertyId = new Guid("59af4182-4457-4fb1-ad84-d7c4e83ef12e"),
                            ItemId = new Guid("176a8e81-bf4b-4f07-a007-f12852e04efd"),
                            Value = "Awesome Metal Cheese"
                        },
                        new
                        {
                            Id = new Guid("ac0828e4-d8a8-434d-8069-c29386dba8ea"),
                            CustomPropertyId = new Guid("4c668a87-63fe-4cf9-acf7-f3ac8f33779f"),
                            ItemId = new Guid("7dbf0a04-fe8f-4263-8819-9554aec17db3"),
                            Value = "Tasty Plastic Pizza"
                        },
                        new
                        {
                            Id = new Guid("454ecb56-7b13-4971-b4db-feb61e506408"),
                            CustomPropertyId = new Guid("1f255537-eae2-4d23-8742-88ccc129d712"),
                            ItemId = new Guid("fb7815e1-ff14-495a-836c-8c99e60f14d3"),
                            Value = "Intelligent Soft Gloves"
                        },
                        new
                        {
                            Id = new Guid("75efe29f-9a83-421c-b535-83e084a6b3fc"),
                            CustomPropertyId = new Guid("bcbf3321-b78c-4e56-aa4a-872b87a5897b"),
                            ItemId = new Guid("edaca7eb-1117-4e45-94fc-a8938f842036"),
                            Value = "Fantastic Metal Mouse"
                        },
                        new
                        {
                            Id = new Guid("8c38ccf5-9fa8-4189-80b0-c8a52742459d"),
                            CustomPropertyId = new Guid("06a0382f-b198-4fea-88c0-8180c994d164"),
                            ItemId = new Guid("c690e7ce-ff94-4861-a9f3-605dc2adb245"),
                            Value = "Handcrafted Frozen Gloves"
                        },
                        new
                        {
                            Id = new Guid("487bde21-3dba-4628-89aa-9f202919c2d2"),
                            CustomPropertyId = new Guid("1f04bfec-9eb9-421d-bd7a-94bf3aeddec6"),
                            ItemId = new Guid("42cebe18-5fbc-4042-9966-f75ddbc9fed5"),
                            Value = "Fantastic Plastic Car"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("667ed1ef-2f2c-47fd-a82b-0c7c5bafa262"),
                            CollectionId = new Guid("32992302-c094-45aa-ba77-8ff46e233e4d"),
                            CreatedAt = new DateTime(2023, 6, 30, 0, 4, 13, 736, DateTimeKind.Local).AddTicks(2942),
                            Name = "Gorgeous Cotton Pizza"
                        },
                        new
                        {
                            Id = new Guid("77612384-ae54-4edb-8ba2-11a856e87933"),
                            CollectionId = new Guid("e08243ea-9887-4fd3-849c-a6f7ab52af0e"),
                            CreatedAt = new DateTime(2023, 3, 19, 18, 4, 58, 650, DateTimeKind.Local).AddTicks(2236),
                            Name = "Sleek Cotton Pizza"
                        },
                        new
                        {
                            Id = new Guid("82bec1bc-4295-471c-a592-8f32489d3619"),
                            CollectionId = new Guid("c5a9e7a0-23fb-47de-a48b-813b6aa22fac"),
                            CreatedAt = new DateTime(2023, 1, 17, 15, 57, 23, 820, DateTimeKind.Local).AddTicks(2243),
                            Name = "Unbranded Steel Salad"
                        },
                        new
                        {
                            Id = new Guid("4d7f8ade-b1d6-4bdc-a1ed-4a76ab793bcb"),
                            CollectionId = new Guid("6366b3c6-5b43-4a80-8b80-4325b22afa4e"),
                            CreatedAt = new DateTime(2022, 10, 14, 19, 59, 49, 678, DateTimeKind.Local).AddTicks(3853),
                            Name = "Gorgeous Concrete Tuna"
                        },
                        new
                        {
                            Id = new Guid("176a8e81-bf4b-4f07-a007-f12852e04efd"),
                            CollectionId = new Guid("582c0d1a-9b0f-4d00-a1c6-f29625d7a221"),
                            CreatedAt = new DateTime(2022, 12, 2, 9, 7, 30, 384, DateTimeKind.Local).AddTicks(7350),
                            Name = "Tasty Plastic Chicken"
                        },
                        new
                        {
                            Id = new Guid("7dbf0a04-fe8f-4263-8819-9554aec17db3"),
                            CollectionId = new Guid("d749406e-f2b2-410e-a67f-70f78743e0c9"),
                            CreatedAt = new DateTime(2023, 6, 12, 14, 26, 34, 393, DateTimeKind.Local).AddTicks(2313),
                            Name = "Licensed Fresh Car"
                        },
                        new
                        {
                            Id = new Guid("fb7815e1-ff14-495a-836c-8c99e60f14d3"),
                            CollectionId = new Guid("f3e8d31d-96f0-4170-8bed-d1e78d07732e"),
                            CreatedAt = new DateTime(2022, 10, 9, 11, 19, 38, 668, DateTimeKind.Local).AddTicks(2097),
                            Name = "Fantastic Metal Computer"
                        },
                        new
                        {
                            Id = new Guid("edaca7eb-1117-4e45-94fc-a8938f842036"),
                            CollectionId = new Guid("2bc1f455-bafd-4383-a201-707e477bff81"),
                            CreatedAt = new DateTime(2023, 7, 10, 17, 30, 17, 605, DateTimeKind.Local).AddTicks(5986),
                            Name = "Intelligent Soft Cheese"
                        },
                        new
                        {
                            Id = new Guid("c690e7ce-ff94-4861-a9f3-605dc2adb245"),
                            CollectionId = new Guid("8c714971-5a0e-4df8-8881-7587101c1dac"),
                            CreatedAt = new DateTime(2022, 8, 28, 16, 27, 47, 615, DateTimeKind.Local).AddTicks(2836),
                            Name = "Awesome Rubber Soap"
                        },
                        new
                        {
                            Id = new Guid("42cebe18-5fbc-4042-9966-f75ddbc9fed5"),
                            CollectionId = new Guid("9fe96455-8f95-4f31-9384-80d1e2eb9ade"),
                            CreatedAt = new DateTime(2023, 4, 9, 1, 7, 31, 710, DateTimeKind.Local).AddTicks(2200),
                            Name = "Fantastic Granite Shoes"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa0fd5e1-15e3-4028-8f49-d5086b9fc19a"),
                            Email = "otabek.pro@hotmail.com",
                            FirstName = "Admin",
                            IsAdmin = true,
                            IsBlocked = false,
                            LastName = "Admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEJsQhxvRZnTRqO2Jk9q/36tRhT1LD9BIAUsMuO2YrxZ4UlTc6QRjTD5Cbb7uA/sSsw=="
                        },
                        new
                        {
                            Id = new Guid("09ba65e9-85fb-48c0-a28d-81e8ec58407e"),
                            Email = "Marcella.Beer@yahoo.com",
                            FirstName = "Marcella",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Beer",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("386eb670-6272-4aab-85a1-b9be2e66af07"),
                            Email = "Loren.Treutel@yahoo.com",
                            FirstName = "Loren",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Treutel",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("4c9b419d-eea1-4de1-b29c-5ca2e9761c2f"),
                            Email = "Milton91@hotmail.com",
                            FirstName = "Milton",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wiza",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("85fb96ea-3d60-47be-b22d-d07d3141f978"),
                            Email = "Tomas88@yahoo.com",
                            FirstName = "Tomas",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Runte",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("74145330-b0d8-49bf-b35b-7a87d7017bd8"),
                            Email = "Bob_Davis@yahoo.com",
                            FirstName = "Bob",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Davis",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("97efc793-9930-431e-8b26-29eb982da4ba"),
                            Email = "Harry19@yahoo.com",
                            FirstName = "Harry",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Labadie",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("87e473d0-05dc-4bfb-b43c-25ccc3b91893"),
                            Email = "Leona69@gmail.com",
                            FirstName = "Leona",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Waelchi",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("cad905b8-3d56-4c03-b5e1-a480cb9986d7"),
                            Email = "Bruce_Jacobi16@hotmail.com",
                            FirstName = "Bruce",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Jacobi",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("c9bd1c74-3e2f-4c06-bb4d-3d2a797281ec"),
                            Email = "Rochelle.Davis86@hotmail.com",
                            FirstName = "Rochelle",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Davis",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("6d3d7a33-0b09-40a7-8fad-50d41b4e44ca"),
                            Email = "Elisa.Kling87@yahoo.com",
                            FirstName = "Elisa",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Kling",
                            PasswordHash = ""
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.HasOne("MyItems.Backend.Models.User", "User")
                        .WithMany("Collections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("CustomProperties")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.HasOne("MyItems.Backend.Models.CustomProperty", "CustomProperty")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("CustomPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyItems.Backend.Models.Item", "Item")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CustomProperty");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("Items")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Navigation("CustomProperties");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Navigation("Collections");
                });
#pragma warning restore 612, 618
        }
    }
}
