// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyItems.Backend;

#nullable disable

namespace MyItems.Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230709185621_CascadeDeleteOptions")]
    partial class CascadeDeleteOptions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Collections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d4ba381-670d-48f9-8b6b-b369717c359b"),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ImageUrl = "https://picsum.photos/640/480/?image=372",
                            Name = "Generic Granite Cheese",
                            Theme = "Practical",
                            UserId = new Guid("f46b2092-b08f-42a1-b66f-f3c6f8af12c4")
                        },
                        new
                        {
                            Id = new Guid("fb727e43-98a7-41b3-a3c3-e62a5fbc3058"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/640/480/?image=122",
                            Name = "Small Granite Soap",
                            Theme = "Fantastic",
                            UserId = new Guid("7d74393d-7d44-47bc-9fd0-f53ec075971c")
                        },
                        new
                        {
                            Id = new Guid("10e0edbf-79cd-4353-90ef-06c058275bc5"),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ImageUrl = "https://picsum.photos/640/480/?image=621",
                            Name = "Ergonomic Wooden Chair",
                            Theme = "Sleek",
                            UserId = new Guid("d522cf63-f321-4528-9d42-db2002a024e3")
                        },
                        new
                        {
                            Id = new Guid("dd713b8b-f776-44ad-b208-7e54f837654d"),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/640/480/?image=470",
                            Name = "Tasty Rubber Bike",
                            Theme = "Licensed",
                            UserId = new Guid("5ea66b52-c08b-4b2e-bcf5-c13ec1a66de8")
                        },
                        new
                        {
                            Id = new Guid("58855b8b-d02b-44ea-bf1c-3ae7bc7c3d42"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ImageUrl = "https://picsum.photos/640/480/?image=303",
                            Name = "Generic Steel Salad",
                            Theme = "Fantastic",
                            UserId = new Guid("f46b2092-b08f-42a1-b66f-f3c6f8af12c4")
                        },
                        new
                        {
                            Id = new Guid("39195399-ff7d-4a54-82be-3a89f500e02d"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/640/480/?image=21",
                            Name = "Awesome Granite Pants",
                            Theme = "Ergonomic",
                            UserId = new Guid("d522cf63-f321-4528-9d42-db2002a024e3")
                        },
                        new
                        {
                            Id = new Guid("92d3a0ab-2605-489c-82d4-5abf4b86b0dc"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/640/480/?image=791",
                            Name = "Refined Wooden Car",
                            Theme = "Tasty",
                            UserId = new Guid("d522cf63-f321-4528-9d42-db2002a024e3")
                        },
                        new
                        {
                            Id = new Guid("c072090c-7ca8-48c1-bc2b-23d031f6378b"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/640/480/?image=394",
                            Name = "Refined Soft Tuna",
                            Theme = "Intelligent",
                            UserId = new Guid("b5f7a66c-3b87-497b-80da-b01a058c5fd4")
                        },
                        new
                        {
                            Id = new Guid("d380640f-762b-448c-a34d-b29e9532e6e8"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ImageUrl = "https://picsum.photos/640/480/?image=915",
                            Name = "Intelligent Steel Keyboard",
                            Theme = "Intelligent",
                            UserId = new Guid("5757d891-4ea8-484c-bda3-da26a608c069")
                        },
                        new
                        {
                            Id = new Guid("c71578c2-8471-48f5-9870-1723b539a4c5"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/640/480/?image=115",
                            Name = "Practical Wooden Computer",
                            Theme = "Tasty",
                            UserId = new Guid("d522cf63-f321-4528-9d42-db2002a024e3")
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("CustomProperty");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21d15ec0-74ec-40ad-8956-135fd26250f8"),
                            CollectionId = new Guid("5d4ba381-670d-48f9-8b6b-b369717c359b"),
                            TypeProperty = "string"
                        },
                        new
                        {
                            Id = new Guid("d901021d-a61f-4b8c-a3c0-2a52ae101ae7"),
                            CollectionId = new Guid("fb727e43-98a7-41b3-a3c3-e62a5fbc3058"),
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("d05bb013-8e75-4f00-b529-ec4b143fcc64"),
                            CollectionId = new Guid("10e0edbf-79cd-4353-90ef-06c058275bc5"),
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("abb49153-9c49-4285-9f5c-095c85252e88"),
                            CollectionId = new Guid("dd713b8b-f776-44ad-b208-7e54f837654d"),
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("9f0c1682-6400-4a96-9f64-8fde7b26732d"),
                            CollectionId = new Guid("58855b8b-d02b-44ea-bf1c-3ae7bc7c3d42"),
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("4901848a-f569-404a-bd1e-e44e6828e38e"),
                            CollectionId = new Guid("39195399-ff7d-4a54-82be-3a89f500e02d"),
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("0be48fe7-9675-44f7-a407-28de50ce9cbb"),
                            CollectionId = new Guid("92d3a0ab-2605-489c-82d4-5abf4b86b0dc"),
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("d70b4ac8-236c-4e5d-a53b-d6e9d0cf180d"),
                            CollectionId = new Guid("c072090c-7ca8-48c1-bc2b-23d031f6378b"),
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("26924022-6ef5-49f4-beb1-5d23c5761783"),
                            CollectionId = new Guid("d380640f-762b-448c-a34d-b29e9532e6e8"),
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("c3e48d35-5e85-416e-9b3e-9789b79054b3"),
                            CollectionId = new Guid("c71578c2-8471-48f5-9870-1723b539a4c5"),
                            TypeProperty = "boolean"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomPropertyId");

                    b.HasIndex("ItemId");

                    b.ToTable("CustomPropertyValue");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5dd30e41-25c5-4cc6-b914-620ed9ddf4b6"),
                            CollectionId = new Guid("5d4ba381-670d-48f9-8b6b-b369717c359b"),
                            CreatedAt = new DateTime(2023, 5, 8, 5, 6, 55, 26, DateTimeKind.Local).AddTicks(1439),
                            Name = "Tasty Concrete Pants"
                        },
                        new
                        {
                            Id = new Guid("9d3c7540-b6e3-4f49-b83a-8aa2a2bb9dca"),
                            CollectionId = new Guid("fb727e43-98a7-41b3-a3c3-e62a5fbc3058"),
                            CreatedAt = new DateTime(2022, 10, 7, 14, 37, 15, 51, DateTimeKind.Local).AddTicks(7857),
                            Name = "Handmade Wooden Keyboard"
                        },
                        new
                        {
                            Id = new Guid("60f65c20-aac8-454f-a794-cfad31299699"),
                            CollectionId = new Guid("10e0edbf-79cd-4353-90ef-06c058275bc5"),
                            CreatedAt = new DateTime(2023, 1, 13, 13, 43, 23, 509, DateTimeKind.Local).AddTicks(5227),
                            Name = "Ergonomic Cotton Fish"
                        },
                        new
                        {
                            Id = new Guid("ae3395e6-c49c-4384-b8b9-0adca43e1a87"),
                            CollectionId = new Guid("dd713b8b-f776-44ad-b208-7e54f837654d"),
                            CreatedAt = new DateTime(2023, 1, 1, 14, 34, 0, 843, DateTimeKind.Local).AddTicks(9244),
                            Name = "Gorgeous Wooden Pizza"
                        },
                        new
                        {
                            Id = new Guid("5a6c7d1b-72bb-4527-b67d-768b8f272f99"),
                            CollectionId = new Guid("58855b8b-d02b-44ea-bf1c-3ae7bc7c3d42"),
                            CreatedAt = new DateTime(2023, 2, 11, 5, 51, 23, 363, DateTimeKind.Local).AddTicks(8316),
                            Name = "Gorgeous Rubber Towels"
                        },
                        new
                        {
                            Id = new Guid("8d729491-eb1d-4e97-9ef5-123a82a1fe6f"),
                            CollectionId = new Guid("39195399-ff7d-4a54-82be-3a89f500e02d"),
                            CreatedAt = new DateTime(2022, 8, 9, 23, 30, 47, 247, DateTimeKind.Local).AddTicks(4158),
                            Name = "Intelligent Rubber Pants"
                        },
                        new
                        {
                            Id = new Guid("426f1924-e7a5-4c24-bde1-dc7a34f6a1c0"),
                            CollectionId = new Guid("92d3a0ab-2605-489c-82d4-5abf4b86b0dc"),
                            CreatedAt = new DateTime(2022, 9, 5, 5, 35, 57, 515, DateTimeKind.Local).AddTicks(5768),
                            Name = "Unbranded Cotton Soap"
                        },
                        new
                        {
                            Id = new Guid("d3af5e7a-0022-4157-a91c-da6c64043f37"),
                            CollectionId = new Guid("c072090c-7ca8-48c1-bc2b-23d031f6378b"),
                            CreatedAt = new DateTime(2023, 6, 30, 16, 10, 51, 502, DateTimeKind.Local).AddTicks(7705),
                            Name = "Sleek Metal Bacon"
                        },
                        new
                        {
                            Id = new Guid("a43a2e57-85d2-49e9-ad7b-2b520604f54f"),
                            CollectionId = new Guid("d380640f-762b-448c-a34d-b29e9532e6e8"),
                            CreatedAt = new DateTime(2023, 5, 28, 5, 2, 28, 656, DateTimeKind.Local).AddTicks(8574),
                            Name = "Handcrafted Frozen Hat"
                        },
                        new
                        {
                            Id = new Guid("31b88f88-b9e9-489d-8558-fe85927d0b58"),
                            CollectionId = new Guid("c71578c2-8471-48f5-9870-1723b539a4c5"),
                            CreatedAt = new DateTime(2023, 6, 2, 14, 39, 30, 544, DateTimeKind.Local).AddTicks(796),
                            Name = "Practical Soft Hat"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc9d79bb-5821-4f28-8a91-320047f281ed"),
                            Email = "otabek.pro@hotmail.com",
                            FirstName = "Admin",
                            IsAdmin = true,
                            IsBlocked = false,
                            LastName = "Admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEJsQhxvRZnTRqO2Jk9q/36tRhT1LD9BIAUsMuO2YrxZ4UlTc6QRjTD5Cbb7uA/sSsw=="
                        },
                        new
                        {
                            Id = new Guid("b5f7a66c-3b87-497b-80da-b01a058c5fd4"),
                            Email = "Lloyd.Wehner35@yahoo.com",
                            FirstName = "Lloyd",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wehner",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("26a628c9-6c3d-43b0-b09d-67d5044c3a27"),
                            Email = "Lloyd.Wehner35@yahoo.com",
                            FirstName = "Lloyd",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wehner",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("f46b2092-b08f-42a1-b66f-f3c6f8af12c4"),
                            Email = "Lloyd.Wehner35@yahoo.com",
                            FirstName = "Lloyd",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wehner",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("862796db-dda3-4c33-846a-624453bd00f6"),
                            Email = "Lloyd.Wehner35@yahoo.com",
                            FirstName = "Lloyd",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wehner",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("7d74393d-7d44-47bc-9fd0-f53ec075971c"),
                            Email = "Lloyd.Wehner35@yahoo.com",
                            FirstName = "Lloyd",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wehner",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("5757d891-4ea8-484c-bda3-da26a608c069"),
                            Email = "Lloyd.Wehner35@yahoo.com",
                            FirstName = "Lloyd",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wehner",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("d522cf63-f321-4528-9d42-db2002a024e3"),
                            Email = "Lloyd.Wehner35@yahoo.com",
                            FirstName = "Lloyd",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wehner",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("9a0232b6-2718-4664-9b39-1c0948432595"),
                            Email = "Lloyd.Wehner35@yahoo.com",
                            FirstName = "Lloyd",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wehner",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("6db41e55-7712-404c-8b84-1e9b78ec29db"),
                            Email = "Lloyd.Wehner35@yahoo.com",
                            FirstName = "Lloyd",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wehner",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("5ea66b52-c08b-4b2e-bcf5-c13ec1a66de8"),
                            Email = "Lloyd.Wehner35@yahoo.com",
                            FirstName = "Lloyd",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Wehner",
                            PasswordHash = ""
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.HasOne("MyItems.Backend.Models.User", "User")
                        .WithMany("Collections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("CustomProperties")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.HasOne("MyItems.Backend.Models.CustomProperty", "CustomProperty")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("CustomPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyItems.Backend.Models.Item", "Item")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CustomProperty");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("Items")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Navigation("CustomProperties");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Navigation("Collections");
                });
#pragma warning restore 612, 618
        }
    }
}
