// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyItems.Backend;

#nullable disable

namespace MyItems.Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230720230256_InitParams")]
    partial class InitParams
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Collections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77df4d2f-b143-4194-b5e8-f0656999e63b"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ImageUrl = "https://picsum.photos/640/480/?image=28",
                            Name = "Gorgeous Concrete Chicken",
                            Theme = "Ergonomic",
                            UserId = new Guid("8e347306-99ce-4d37-abb8-2bdabf353cc7")
                        },
                        new
                        {
                            Id = new Guid("1812560e-7327-410f-843d-013301cfbd4c"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/640/480/?image=496",
                            Name = "Practical Granite Soap",
                            Theme = "Intelligent",
                            UserId = new Guid("8e347306-99ce-4d37-abb8-2bdabf353cc7")
                        },
                        new
                        {
                            Id = new Guid("75052dd1-b358-4a27-ba9d-52b803b8d4dc"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/640/480/?image=842",
                            Name = "Practical Soft Cheese",
                            Theme = "Refined",
                            UserId = new Guid("77873d29-1f12-4159-b8bd-0c5149f8f257")
                        },
                        new
                        {
                            Id = new Guid("80e89b88-ddf4-438d-87b5-9a73119dd626"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/640/480/?image=0",
                            Name = "Sleek Rubber Chicken",
                            Theme = "Licensed",
                            UserId = new Guid("44e71406-5828-4460-af12-d5a8e26c1ba3")
                        },
                        new
                        {
                            Id = new Guid("fb427abf-09ce-481c-ad68-1909d98c6474"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ImageUrl = "https://picsum.photos/640/480/?image=689",
                            Name = "Unbranded Cotton Gloves",
                            Theme = "Ergonomic",
                            UserId = new Guid("f896d352-27af-472b-876e-5ca6a7e90100")
                        },
                        new
                        {
                            Id = new Guid("7a53ed42-6a05-458a-ae8e-1adf376232ff"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/640/480/?image=685",
                            Name = "Ergonomic Frozen Car",
                            Theme = "Handcrafted",
                            UserId = new Guid("77873d29-1f12-4159-b8bd-0c5149f8f257")
                        },
                        new
                        {
                            Id = new Guid("280ae474-e15b-407c-94ae-328d5c32f867"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            ImageUrl = "https://picsum.photos/640/480/?image=307",
                            Name = "Handmade Frozen Soap",
                            Theme = "Handcrafted",
                            UserId = new Guid("bf466c09-3f00-4f16-a5cb-ff84fb7861e6")
                        },
                        new
                        {
                            Id = new Guid("17cadfc1-a011-41da-9367-0d2947f88f15"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            ImageUrl = "https://picsum.photos/640/480/?image=422",
                            Name = "Handcrafted Metal Ball",
                            Theme = "Licensed",
                            UserId = new Guid("0e59e516-c62a-444b-a5c3-e15a27d6055d")
                        },
                        new
                        {
                            Id = new Guid("380588c3-8cec-42f2-9030-d9a7f1d9cf92"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ImageUrl = "https://picsum.photos/640/480/?image=1076",
                            Name = "Gorgeous Frozen Chicken",
                            Theme = "Handcrafted",
                            UserId = new Guid("bf466c09-3f00-4f16-a5cb-ff84fb7861e6")
                        },
                        new
                        {
                            Id = new Guid("fba61572-e08f-48a1-a92f-a0e9cc03db69"),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ImageUrl = "https://picsum.photos/640/480/?image=792",
                            Name = "Awesome Steel Car",
                            Theme = "Licensed",
                            UserId = new Guid("bf466c09-3f00-4f16-a5cb-ff84fb7861e6")
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("CustomProperties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f05ad174-b7a9-447b-a492-ce08a1ce8c84"),
                            CollectionId = new Guid("77df4d2f-b143-4194-b5e8-f0656999e63b"),
                            Name = "Trantow Inc",
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("96f59deb-02bf-41a4-9010-53aa9afcdb88"),
                            CollectionId = new Guid("1812560e-7327-410f-843d-013301cfbd4c"),
                            Name = "Ward - Douglas",
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("3d354896-040e-4f84-8340-9616bd30f871"),
                            CollectionId = new Guid("75052dd1-b358-4a27-ba9d-52b803b8d4dc"),
                            Name = "Bruen, Buckridge and Bogisich",
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("bafb518c-78b7-4bc0-b659-edb089369f07"),
                            CollectionId = new Guid("80e89b88-ddf4-438d-87b5-9a73119dd626"),
                            Name = "Volkman - Koch",
                            TypeProperty = "boolean"
                        },
                        new
                        {
                            Id = new Guid("64e23e76-13a5-4b89-892e-4828e5e16865"),
                            CollectionId = new Guid("fb427abf-09ce-481c-ad68-1909d98c6474"),
                            Name = "Shields - West",
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("f8902c15-6441-49da-af15-3d83dd925778"),
                            CollectionId = new Guid("7a53ed42-6a05-458a-ae8e-1adf376232ff"),
                            Name = "Weimann - Predovic",
                            TypeProperty = "number"
                        },
                        new
                        {
                            Id = new Guid("2e433225-c320-417d-b282-8a82d3280d96"),
                            CollectionId = new Guid("280ae474-e15b-407c-94ae-328d5c32f867"),
                            Name = "Bailey and Sons",
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("6587a99d-8114-47e2-8955-86f8fbb476e3"),
                            CollectionId = new Guid("17cadfc1-a011-41da-9367-0d2947f88f15"),
                            Name = "Considine Inc",
                            TypeProperty = "string"
                        },
                        new
                        {
                            Id = new Guid("27eb8cfe-39c9-4e7b-9aeb-116ba147fbd5"),
                            CollectionId = new Guid("380588c3-8cec-42f2-9030-d9a7f1d9cf92"),
                            Name = "Ward - Dickens",
                            TypeProperty = "dateTime"
                        },
                        new
                        {
                            Id = new Guid("2f81bb1b-db00-4dc9-88f0-a51beb9bb41f"),
                            CollectionId = new Guid("fba61572-e08f-48a1-a92f-a0e9cc03db69"),
                            Name = "Hirthe - Keeling",
                            TypeProperty = "dateTime"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomPropertyId");

                    b.HasIndex("ItemId");

                    b.ToTable("CustomPropertyValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0557fc86-26e8-480e-aed1-a64b453db59f"),
                            CustomPropertyId = new Guid("f05ad174-b7a9-447b-a492-ce08a1ce8c84"),
                            ItemId = new Guid("9de54a09-5879-4060-aeea-5ccd403198cf"),
                            Value = "Practical Fresh Bacon"
                        },
                        new
                        {
                            Id = new Guid("cbbee14e-c972-4ee7-9ec1-2a38f27e618c"),
                            CustomPropertyId = new Guid("96f59deb-02bf-41a4-9010-53aa9afcdb88"),
                            ItemId = new Guid("b4da7705-33e2-4a2a-9af8-ade7cf8b4672"),
                            Value = "Rustic Concrete Bike"
                        },
                        new
                        {
                            Id = new Guid("7205cec8-0468-4fab-930e-6293138aa631"),
                            CustomPropertyId = new Guid("3d354896-040e-4f84-8340-9616bd30f871"),
                            ItemId = new Guid("ffa6c91e-5c11-4811-94ee-30a66b48952b"),
                            Value = "Tasty Granite Car"
                        },
                        new
                        {
                            Id = new Guid("10938d8b-5e5b-400c-ab37-b77ae91bcc2a"),
                            CustomPropertyId = new Guid("bafb518c-78b7-4bc0-b659-edb089369f07"),
                            ItemId = new Guid("5d9e1b3c-e1eb-4c45-b060-de615fbb2802"),
                            Value = "Practical Granite Soap"
                        },
                        new
                        {
                            Id = new Guid("65934031-3ca1-4796-a04b-ea7bbe5cb1b4"),
                            CustomPropertyId = new Guid("64e23e76-13a5-4b89-892e-4828e5e16865"),
                            ItemId = new Guid("d08a3072-8503-45ee-a7bd-0010b04e33dc"),
                            Value = "Refined Rubber Chips"
                        },
                        new
                        {
                            Id = new Guid("2085c9bd-329f-4b58-9bc9-e325c5faec7f"),
                            CustomPropertyId = new Guid("f8902c15-6441-49da-af15-3d83dd925778"),
                            ItemId = new Guid("c26728fc-8ed7-4c9e-9d9b-49c2a7271346"),
                            Value = "Licensed Metal Chair"
                        },
                        new
                        {
                            Id = new Guid("e73d21b1-5e42-43c2-b5b6-1ce85d3a195c"),
                            CustomPropertyId = new Guid("2e433225-c320-417d-b282-8a82d3280d96"),
                            ItemId = new Guid("78649ca1-b9a2-46ac-99d3-aaf14071f0a2"),
                            Value = "Licensed Wooden Towels"
                        },
                        new
                        {
                            Id = new Guid("5d52c54d-4f41-4ede-9404-a922f45af407"),
                            CustomPropertyId = new Guid("6587a99d-8114-47e2-8955-86f8fbb476e3"),
                            ItemId = new Guid("b9563f19-6d77-4e2a-b571-2658ac9ed01a"),
                            Value = "Fantastic Frozen Tuna"
                        },
                        new
                        {
                            Id = new Guid("154db740-488c-4f74-905f-347452207e98"),
                            CustomPropertyId = new Guid("27eb8cfe-39c9-4e7b-9aeb-116ba147fbd5"),
                            ItemId = new Guid("5d343bee-0770-4fdb-bfc5-03350d66ec4d"),
                            Value = "Licensed Fresh Table"
                        },
                        new
                        {
                            Id = new Guid("8a016c89-fb78-4e72-85aa-eb437f532f0c"),
                            CustomPropertyId = new Guid("2f81bb1b-db00-4dc9-88f0-a51beb9bb41f"),
                            ItemId = new Guid("4d9d2cf8-8c47-43af-aff1-f5848aeddc70"),
                            Value = "Sleek Wooden Sausages"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9de54a09-5879-4060-aeea-5ccd403198cf"),
                            CollectionId = new Guid("77df4d2f-b143-4194-b5e8-f0656999e63b"),
                            CreatedAt = new DateTime(2022, 8, 30, 13, 8, 19, 897, DateTimeKind.Local).AddTicks(1064),
                            Name = "Handmade Granite Salad"
                        },
                        new
                        {
                            Id = new Guid("b4da7705-33e2-4a2a-9af8-ade7cf8b4672"),
                            CollectionId = new Guid("1812560e-7327-410f-843d-013301cfbd4c"),
                            CreatedAt = new DateTime(2022, 11, 15, 13, 3, 40, 662, DateTimeKind.Local).AddTicks(2601),
                            Name = "Licensed Fresh Sausages"
                        },
                        new
                        {
                            Id = new Guid("ffa6c91e-5c11-4811-94ee-30a66b48952b"),
                            CollectionId = new Guid("75052dd1-b358-4a27-ba9d-52b803b8d4dc"),
                            CreatedAt = new DateTime(2023, 3, 16, 12, 42, 13, 976, DateTimeKind.Local).AddTicks(5181),
                            Name = "Sleek Frozen Cheese"
                        },
                        new
                        {
                            Id = new Guid("5d9e1b3c-e1eb-4c45-b060-de615fbb2802"),
                            CollectionId = new Guid("80e89b88-ddf4-438d-87b5-9a73119dd626"),
                            CreatedAt = new DateTime(2023, 4, 3, 5, 49, 13, 919, DateTimeKind.Local).AddTicks(689),
                            Name = "Gorgeous Soft Shoes"
                        },
                        new
                        {
                            Id = new Guid("d08a3072-8503-45ee-a7bd-0010b04e33dc"),
                            CollectionId = new Guid("fb427abf-09ce-481c-ad68-1909d98c6474"),
                            CreatedAt = new DateTime(2023, 3, 26, 2, 8, 43, 142, DateTimeKind.Local).AddTicks(5819),
                            Name = "Fantastic Plastic Pants"
                        },
                        new
                        {
                            Id = new Guid("c26728fc-8ed7-4c9e-9d9b-49c2a7271346"),
                            CollectionId = new Guid("7a53ed42-6a05-458a-ae8e-1adf376232ff"),
                            CreatedAt = new DateTime(2022, 10, 15, 6, 31, 32, 150, DateTimeKind.Local).AddTicks(9640),
                            Name = "Awesome Plastic Chair"
                        },
                        new
                        {
                            Id = new Guid("78649ca1-b9a2-46ac-99d3-aaf14071f0a2"),
                            CollectionId = new Guid("280ae474-e15b-407c-94ae-328d5c32f867"),
                            CreatedAt = new DateTime(2022, 11, 9, 7, 12, 44, 164, DateTimeKind.Local).AddTicks(7455),
                            Name = "Generic Plastic Fish"
                        },
                        new
                        {
                            Id = new Guid("b9563f19-6d77-4e2a-b571-2658ac9ed01a"),
                            CollectionId = new Guid("17cadfc1-a011-41da-9367-0d2947f88f15"),
                            CreatedAt = new DateTime(2022, 10, 2, 10, 39, 23, 296, DateTimeKind.Local).AddTicks(4177),
                            Name = "Incredible Concrete Chicken"
                        },
                        new
                        {
                            Id = new Guid("5d343bee-0770-4fdb-bfc5-03350d66ec4d"),
                            CollectionId = new Guid("380588c3-8cec-42f2-9030-d9a7f1d9cf92"),
                            CreatedAt = new DateTime(2022, 9, 21, 12, 6, 55, 494, DateTimeKind.Local).AddTicks(6970),
                            Name = "Fantastic Frozen Hat"
                        },
                        new
                        {
                            Id = new Guid("4d9d2cf8-8c47-43af-aff1-f5848aeddc70"),
                            CollectionId = new Guid("fba61572-e08f-48a1-a92f-a0e9cc03db69"),
                            CreatedAt = new DateTime(2022, 10, 9, 2, 27, 18, 441, DateTimeKind.Local).AddTicks(3885),
                            Name = "Licensed Rubber Fish"
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("84f4c24e-908d-4524-9f90-0f15a20ae9ec"),
                            Email = "otabek.r743@gmail.com",
                            FirstName = "Admin",
                            IsAdmin = true,
                            IsBlocked = false,
                            LastName = "Admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEJsQhxvRZnTRqO2Jk9q/36tRhT1LD9BIAUsMuO2YrxZ4UlTc6QRjTD5Cbb7uA/sSsw=="
                        },
                        new
                        {
                            Id = new Guid("bf466c09-3f00-4f16-a5cb-ff84fb7861e6"),
                            Email = "Eunice82@yahoo.com",
                            FirstName = "Eunice",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Mills",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("0e59e516-c62a-444b-a5c3-e15a27d6055d"),
                            Email = "Rickey.Smith51@gmail.com",
                            FirstName = "Rickey",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Smith",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("77873d29-1f12-4159-b8bd-0c5149f8f257"),
                            Email = "Regina.Sporer86@hotmail.com",
                            FirstName = "Regina",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Sporer",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("8e347306-99ce-4d37-abb8-2bdabf353cc7"),
                            Email = "Hope28@gmail.com",
                            FirstName = "Hope",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Hettinger",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("32af82e2-a45a-425b-b49d-d2b7290f47e0"),
                            Email = "Richard_Zulauf@hotmail.com",
                            FirstName = "Richard",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Zulauf",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("44e71406-5828-4460-af12-d5a8e26c1ba3"),
                            Email = "Kelley_Franecki@yahoo.com",
                            FirstName = "Kelley",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Franecki",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("5cd547e5-3575-40b6-942a-51d32ad6b3e3"),
                            Email = "Kathryn47@hotmail.com",
                            FirstName = "Kathryn",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Corkery",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("d3d4b2e0-1c22-4d61-9ba6-586555aa136a"),
                            Email = "Lora.Prosacco23@yahoo.com",
                            FirstName = "Lora",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Prosacco",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("f896d352-27af-472b-876e-5ca6a7e90100"),
                            Email = "Paula.Prohaska88@yahoo.com",
                            FirstName = "Paula",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Prohaska",
                            PasswordHash = ""
                        },
                        new
                        {
                            Id = new Guid("ff4d07b3-241f-4f9f-8229-192bd1d0630d"),
                            Email = "Luz_Runolfsdottir32@yahoo.com",
                            FirstName = "Luz",
                            IsAdmin = false,
                            IsBlocked = false,
                            LastName = "Runolfsdottir",
                            PasswordHash = ""
                        });
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.HasOne("MyItems.Backend.Models.User", "User")
                        .WithMany("Collections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("CustomProperties")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomPropertyValue", b =>
                {
                    b.HasOne("MyItems.Backend.Models.CustomProperty", "CustomProperty")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("CustomPropertyId");

                    b.HasOne("MyItems.Backend.Models.Item", "Item")
                        .WithMany("CustomPropertyValues")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CustomProperty");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.HasOne("MyItems.Backend.Models.Collection", "Collection")
                        .WithMany("Items")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Collection", b =>
                {
                    b.Navigation("CustomProperties");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("MyItems.Backend.Models.CustomProperty", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.Item", b =>
                {
                    b.Navigation("CustomPropertyValues");
                });

            modelBuilder.Entity("MyItems.Backend.Models.User", b =>
                {
                    b.Navigation("Collections");
                });
#pragma warning restore 612, 618
        }
    }
}
